// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 18756 $
// File generated on 2010/3/18 15:58:48 from Type Library described below.

// ************************************************************************  //
// Type Lib: E:\PROGRAM\IB_API_9_62\ActiveX\Tws.ocx (1)
// LIBID: {0A77CCF5-052C-11D6-B0EC-00B0D074179C}
// LCID: 0
// Helpfile: E:\PROGRAM\IB_API_9_62\ActiveX\Tws.hlp
// HelpString: Tws ActiveX Control module
// DepndLst: 
//   (1) v2.0 stdole, (F:\Windows\system32\stdole2.tlb)
// ************************************************************************ //
#ifndef   TWSLib_OCXH
#define   TWSLib_OCXH

#pragma option push -b -a4 -w-inl

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "TWSLib_TLB.h"
namespace Twslib_tlb
{

// *********************************************************************//
// HelpString: Tws ActiveX Control module
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTws
// Help String      : Tws Control
// Default Interface: _DTws
// Def. Intf. Object: _DTwsDisp
// Def. Intf. DISP? : Yes
// Event   Interface: _DTwsEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TTwstickPrice)(System::TObject * Sender, 
                                                    long id, long tickType, double price, 
                                                    int canAutoExecute);
typedef void __fastcall (__closure * TTwstickSize)(System::TObject * Sender, 
                                                   long id, long tickType, long size);
typedef void __fastcall (__closure * TTwsopenOrder1)(System::TObject * Sender, 
                                                     long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                                     double strike, BSTR right, BSTR exchange, 
                                                     BSTR curency, BSTR localSymbol);
typedef void __fastcall (__closure * TTwsopenOrder2)(System::TObject * Sender, 
                                                     long id, BSTR action, long quantity, 
                                                     BSTR orderType, double lmtPrice, 
                                                     double auxPrice, BSTR tif, BSTR ocaGroup, 
                                                     BSTR account, BSTR openClose, long origin, 
                                                     BSTR orderRef, long clientId);
typedef void __fastcall (__closure * TTwsupdateAccountTime)(System::TObject * Sender, 
                                                            BSTR timeStamp);
typedef void __fastcall (__closure * TTwsupdateAccountValue)(System::TObject * Sender, 
                                                             BSTR key, BSTR value, BSTR curency, 
                                                             BSTR accountName);
typedef void __fastcall (__closure * TTwsnextValidId)(System::TObject * Sender, 
                                                      long id);
typedef void __fastcall (__closure * TTwspermId)(System::TObject * Sender, 
                                                 long id, long permId);
typedef void __fastcall (__closure * TTwserrMsg)(System::TObject * Sender, 
                                                 long id, long errorCode, BSTR errorMsg);
typedef void __fastcall (__closure * TTwsupdatePortfolio)(System::TObject * Sender, 
                                                          BSTR symbol, BSTR secType, BSTR expiry, 
                                                          double strike, BSTR right, BSTR curency, 
                                                          BSTR localSymbol, long position, 
                                                          double marketPrice, double marketValue, 
                                                          double averageCost, double unrealizedPNL, 
                                                          double realizedPNL, BSTR accountName);
typedef void __fastcall (__closure * TTwsorderStatus)(System::TObject * Sender, 
                                                      long id, BSTR status, long filled, 
                                                      long remaining, double avgFillPrice, 
                                                      long permId, long parentId, 
                                                      double lastFillPrice, long clientId, 
                                                      BSTR whyHeld);
typedef void __fastcall (__closure * TTwscontractDetails)(System::TObject * Sender, 
                                                          BSTR symbol, BSTR secType, BSTR expiry, 
                                                          double strike, BSTR right, BSTR exchange, 
                                                          BSTR curency, BSTR localSymbol, 
                                                          BSTR marketName, BSTR tradingClass, 
                                                          long conId, double minTick, 
                                                          long priceMagnifier, BSTR multiplier, 
                                                          BSTR orderTypes, BSTR validExchanges);
typedef void __fastcall (__closure * TTwsexecDetails)(System::TObject * Sender, 
                                                      long id, BSTR symbol, BSTR secType, 
                                                      BSTR expiry, double strike, BSTR right, 
                                                      BSTR cExchange, BSTR curency, BSTR localSymbol, 
                                                      BSTR execId, BSTR time, BSTR acctNumber, 
                                                      BSTR eExchange, BSTR side, long shares, 
                                                      double price, long permId, long clientId, 
                                                      int isLiquidation);
typedef void __fastcall (__closure * TTwsupdateMktDepth)(System::TObject * Sender, 
                                                         long id, long position, long operation, 
                                                         long side, double price, long size);
typedef void __fastcall (__closure * TTwsupdateMktDepthL2)(System::TObject * Sender, 
                                                           long id, long position, BSTR marketMaker, 
                                                           long operation, long side, double price, 
                                                           long size);
typedef void __fastcall (__closure * TTwsupdateNewsBulletin)(System::TObject * Sender, 
                                                             short msgId, short msgType, 
                                                             BSTR message, BSTR origExchange);
typedef void __fastcall (__closure * TTwsmanagedAccounts)(System::TObject * Sender, 
                                                          BSTR accountsList);
typedef void __fastcall (__closure * TTwsopenOrder3)(System::TObject * Sender, 
                                                     long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                                     double strike, BSTR right, BSTR exchange, 
                                                     BSTR curency, BSTR localSymbol, BSTR action, 
                                                     long quantity, BSTR orderType, double lmtPrice, 
                                                     double auxPrice, BSTR tif, BSTR ocaGroup, 
                                                     BSTR account, BSTR openClose, long origin, 
                                                     BSTR orderRef, long clientId, long permId, 
                                                     BSTR sharesAllocation, BSTR faGroup, 
                                                     BSTR faMethod, BSTR faPercentage, 
                                                     BSTR faProfile, BSTR goodAfterTime, 
                                                     BSTR goodTillDate);
typedef void __fastcall (__closure * TTwsreceiveFA)(System::TObject * Sender, 
                                                    long faDataType, BSTR cxml);
typedef void __fastcall (__closure * TTwshistoricalData)(System::TObject * Sender, 
                                                         long reqId, BSTR date, double open, 
                                                         double high, double low, double close, 
                                                         long volume, long barCount, double WAP, 
                                                         long hasGaps);
typedef void __fastcall (__closure * TTwsopenOrder4)(System::TObject * Sender, 
                                                     long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                                     double strike, BSTR right, BSTR exchange, 
                                                     BSTR curency, BSTR localSymbol, BSTR action, 
                                                     long quantity, BSTR orderType, double lmtPrice, 
                                                     double auxPrice, BSTR tif, BSTR ocaGroup, 
                                                     BSTR account, BSTR openClose, long origin, 
                                                     BSTR orderRef, long clientId, long permId, 
                                                     BSTR sharesAllocation, BSTR faGroup, 
                                                     BSTR faMethod, BSTR faPercentage, 
                                                     BSTR faProfile, BSTR goodAfterTime, 
                                                     BSTR goodTillDate, long ocaType, BSTR rule80A, 
                                                     BSTR settlingFirm, int allOrNone, long minQty, 
                                                     double percentOffset, int eTradeOnly, 
                                                     int firmQuoteOnly, double nbboPriceCap, 
                                                     long auctionStrategy, double startingPrice, 
                                                     double stockRefPrice, double delta, 
                                                     double stockRangeLower, double stockRangeUpper, 
                                                     int blockOrder, int sweepToFill, int ignoreRth, 
                                                     int hidden, double discretionaryAmt, 
                                                     long displaySize, long parentId, 
                                                     long triggerMethod, long shortSaleSlot, 
                                                     BSTR designatedLocation, double volatility, 
                                                     long volatilityType, BSTR deltaNeutralOrderType, 
                                                     double deltaNeutralAuxPrice, 
                                                     int continuousUpdate, int referencePriceType, 
                                                     double trailStopPrice, double basisPoints, 
                                                     long basisPointsType, BSTR legsStr, 
                                                     long scaleInitLevelSize, 
                                                     long scaleSubsLevelSize, 
                                                     double scalePriceIncrement);
typedef void __fastcall (__closure * TTwsbondContractDetails)(System::TObject * Sender, 
                                                              BSTR symbol, BSTR secType, BSTR cusip, 
                                                              double coupon, BSTR maturity, 
                                                              BSTR issueDate, BSTR ratings, 
                                                              BSTR bondType, BSTR couponType, 
                                                              long convertible, long callable, 
                                                              long putable, BSTR descAppend, 
                                                              BSTR exchange, BSTR curency, 
                                                              BSTR marketName, BSTR tradingClass, 
                                                              long conId, double minTick, 
                                                              BSTR orderTypes, BSTR validExchanges, 
                                                              BSTR nextOptionDate, 
                                                              BSTR nextOptionType, 
                                                              long nextOptionPartial, BSTR notes);
typedef void __fastcall (__closure * TTwsscannerParameters)(System::TObject * Sender, 
                                                            BSTR xml);
typedef void __fastcall (__closure * TTwsscannerData)(System::TObject * Sender, 
                                                      long reqId, long rank, BSTR symbol, 
                                                      BSTR secType, BSTR expiry, double strike, 
                                                      BSTR right, BSTR exchange, BSTR curency, 
                                                      BSTR localSymbol, BSTR marketName, 
                                                      BSTR tradingClass, BSTR distance, 
                                                      BSTR benchmark, BSTR projection, BSTR legsStr);
typedef void __fastcall (__closure * TTwstickOptionComputation)(System::TObject * Sender, 
                                                                long id, long tickType, 
                                                                double impliedVol, double delta, 
                                                                double modelPrice, double pvDividend);
typedef void __fastcall (__closure * TTwstickGeneric)(System::TObject * Sender, 
                                                      long id, long tickType, double value);
typedef void __fastcall (__closure * TTwstickString)(System::TObject * Sender, 
                                                     long id, long tickType, BSTR value);
typedef void __fastcall (__closure * TTwstickEFP)(System::TObject * Sender, 
                                                  long tickerId, long field, double basisPoints, 
                                                  BSTR formattedBasisPoints, double totalDividends, 
                                                  long holdDays, BSTR futureExpiry, 
                                                  double dividendImpact, double dividendsToExpiry);
typedef void __fastcall (__closure * TTwsrealtimeBar)(System::TObject * Sender, 
                                                      long tickerId, long time, double open, 
                                                      double high, double low, double close, 
                                                      long volume, double WAP, long Count);
typedef void __fastcall (__closure * TTwscurrentTime)(System::TObject * Sender, 
                                                      long time);
typedef void __fastcall (__closure * TTwsscannerDataEnd)(System::TObject * Sender, 
                                                         long reqId);
typedef void __fastcall (__closure * TTwsfundamentalData)(System::TObject * Sender, 
                                                          long reqId, BSTR data);
typedef void __fastcall (__closure * TTwscontractDetailsEnd)(System::TObject * Sender, 
                                                             long reqId);
typedef void __fastcall (__closure * TTwsaccountDownloadEnd)(System::TObject * Sender, 
                                                             BSTR accountName);
typedef void __fastcall (__closure * TTwsexecDetailsEnd)(System::TObject * Sender, 
                                                         long reqId);
typedef void __fastcall (__closure * TTwsdeltaNeutralValidation)(System::TObject * Sender, 
                                                                 long reqId, 
                                                                 Twslib_tlb::IUnderComp* underComp);
typedef void __fastcall (__closure * TTwstickSnapshotEnd)(System::TObject * Sender, 
                                                          long reqId);
typedef void __fastcall (__closure * TTwscontractDetailsEx)(System::TObject * Sender, 
                                                            long reqId, 
                                                            Twslib_tlb::IContractDetails* contractDetails);
typedef void __fastcall (__closure * TTwsopenOrderEx)(System::TObject * Sender, 
                                                      long orderId, Twslib_tlb::IContract* contract, 
                                                      Twslib_tlb::IOrder* order, 
                                                      Twslib_tlb::IOrderState* orderState);
typedef void __fastcall (__closure * TTwsexecDetailsEx)(System::TObject * Sender, 
                                                        long reqId, Twslib_tlb::IContract* contract, 
                                                        Twslib_tlb::IExecution* execution);
typedef void __fastcall (__closure * TTwsupdatePortfolioEx)(System::TObject * Sender, 
                                                            Twslib_tlb::IContract* contract, 
                                                            long position, double marketPrice, 
                                                            double marketValue, double averageCost, 
                                                            double unrealizedPNL, double realizedPNL, 
                                                            BSTR accountName);
typedef void __fastcall (__closure * TTwsscannerDataEx)(System::TObject * Sender, 
                                                        long reqId, long rank, 
                                                        Twslib_tlb::IContractDetails* contractDetails, 
                                                        BSTR distance, BSTR benchmark, 
                                                        BSTR projection, BSTR legsStr);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host Tws Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TTws : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TTwstickPrice                  FOntickPrice;
  TTwstickSize                   FOntickSize;
  TNotifyEvent                   FOnconnectionClosed;
  TTwsopenOrder1                 FOnopenOrder1;
  TTwsopenOrder2                 FOnopenOrder2;
  TTwsupdateAccountTime          FOnupdateAccountTime;
  TTwsupdateAccountValue         FOnupdateAccountValue;
  TTwsnextValidId                FOnnextValidId;
  TTwspermId                     FOnpermId;
  TTwserrMsg                     FOnerrMsg;
  TTwsupdatePortfolio            FOnupdatePortfolio;
  TTwsorderStatus                FOnorderStatus;
  TTwscontractDetails            FOncontractDetails;
  TTwsexecDetails                FOnexecDetails;
  TTwsupdateMktDepth             FOnupdateMktDepth;
  TTwsupdateMktDepthL2           FOnupdateMktDepthL2;
  TTwsupdateNewsBulletin         FOnupdateNewsBulletin;
  TTwsmanagedAccounts            FOnmanagedAccounts;
  TTwsopenOrder3                 FOnopenOrder3;
  TTwsreceiveFA                  FOnreceiveFA;
  TTwshistoricalData             FOnhistoricalData;
  TTwsopenOrder4                 FOnopenOrder4;
  TTwsbondContractDetails        FOnbondContractDetails;
  TTwsscannerParameters          FOnscannerParameters;
  TTwsscannerData                FOnscannerData;
  TTwstickOptionComputation      FOntickOptionComputation;
  TTwstickGeneric                FOntickGeneric;
  TTwstickString                 FOntickString;
  TTwstickEFP                    FOntickEFP;
  TTwsrealtimeBar                FOnrealtimeBar;
  TTwscurrentTime                FOncurrentTime;
  TTwsscannerDataEnd             FOnscannerDataEnd;
  TTwsfundamentalData            FOnfundamentalData;
  TTwscontractDetailsEnd         FOncontractDetailsEnd;
  TNotifyEvent                   FOnopenOrderEnd;
  TTwsaccountDownloadEnd         FOnaccountDownloadEnd;
  TTwsexecDetailsEnd             FOnexecDetailsEnd;
  TTwsdeltaNeutralValidation     FOndeltaNeutralValidation;
  TTwstickSnapshotEnd            FOntickSnapshotEnd;
  TTwscontractDetailsEx          FOncontractDetailsEx;
  TTwsopenOrderEx                FOnopenOrderEx;
  TTwsexecDetailsEx              FOnexecDetailsEx;
  TTwsupdatePortfolioEx          FOnupdatePortfolioEx;
  TTwsscannerDataEx              FOnscannerDataEx;

  // Default Interace of OCX
  //
  _DTwsDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[44];
  static TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  _DTwsDisp __fastcall GetDefaultInterface();
  _DTwsDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TTws(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TTws(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  Twslib_tlb::IComboLegList* __fastcall createComboLegList(void);
  Twslib_tlb::ITagValueList* __fastcall createTagValueList(void);
  Twslib_tlb::IUnderComp* __fastcall createUnderComp(void);
  void            __fastcall cancelScannerSubscription(long tickerId);
  Twslib_tlb::IExecutionFilter* __fastcall createExecutionFilter(void);
  Twslib_tlb::IOrder* __fastcall createOrder(void);
  Twslib_tlb::IScannerSubscription* __fastcall createScannerSubscription(void);
  void            __fastcall placeOrderEx(long orderId, Twslib_tlb::IContract* contract, 
                                          Twslib_tlb::IOrder* order);
  void            __fastcall reqScannerSubscriptionEx(long tickerId, 
                                                      Twslib_tlb::IScannerSubscription* subscription);
  void            __fastcall reqRealTimeBarsEx(long tickerId, Twslib_tlb::IContract* contract, 
                                               long barSize, BSTR whatToShow, long useRTH);
  Twslib_tlb::IContract* __fastcall createContract(void);
  void            __fastcall exerciseOptionsEx(long tickerId, Twslib_tlb::IContract* contract, 
                                               long exerciseAction, long exerciseQuantity, 
                                               BSTR account, long override);
  void            __fastcall reqExecutionsEx(long reqId, Twslib_tlb::IExecutionFilter* filter);
  void            __fastcall resetAllProperties(void);
  void            __fastcall reqFundamentalData(long reqId, Twslib_tlb::IContract* contract, 
                                                BSTR reportType);
  void            __fastcall reqCurrentTime(void);
  void            __fastcall reqMktDepthEx(long tickerId, Twslib_tlb::IContract* contract, 
                                           long numRows);
  void            __fastcall cancelMktData(long id);
  void            __fastcall cancelOrder(long id);
  void            __fastcall cancelFundamentalData(long reqId);
  void            __fastcall reqMktDataEx(long tickerId, Twslib_tlb::IContract* contract, 
                                          BSTR genericTicks, long snapshot);
  void            __fastcall reqScannerSubscription(long tickerId, long numberOfRows, 
                                                    BSTR instrument, BSTR locationCode, 
                                                    BSTR scanCode, double abovePrice, 
                                                    double belowPrice, long aboveVolume, 
                                                    double marketCapAbove, double marketCapBelow, 
                                                    BSTR moodyRatingAbove, BSTR moodyRatingBelow, 
                                                    BSTR spRatingAbove, BSTR spRatingBelow, 
                                                    BSTR maturityDateAbove, BSTR maturityDateBelow, 
                                                    double couponRateAbove, double couponRateBelow, 
                                                    long excludeConvertible, 
                                                    long averageOptionVolumeAbove, 
                                                    BSTR scannerSettingPairs, BSTR stockTypeFilter);
  void            __fastcall reqScannerParameters(void);
  void            __fastcall reqRealTimeBars(long tickerId, BSTR symbol, BSTR secType, BSTR expiry, 
                                             double strike, BSTR right, BSTR multiplier, 
                                             BSTR exchange, BSTR primaryExchange, BSTR currency, 
                                             long isExpired, long barSize, BSTR whatToShow, 
                                             long useRTH);
  void            __fastcall reqContractDetailsEx(long reqId, Twslib_tlb::IContract* contract);
  void            __fastcall cancelRealTimeBars(long tickerId);
  void            __fastcall cancelHistoricalData(long tickerId);
  void            __fastcall reqHistoricalDataEx(long tickerId, Twslib_tlb::IContract* contract, 
                                                 BSTR endDateTime, BSTR duration, BSTR barSize, 
                                                 BSTR whatToShow, long useRTH, long formatDate);
  void            __fastcall reqHistoricalData(long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                               double strike, BSTR right, BSTR multiplier, 
                                               BSTR exchange, BSTR curency, long isExpired, 
                                               BSTR endDateTime, BSTR durationStr, 
                                               BSTR barSizeSetting, BSTR whatToShow, long useRTH, 
                                               long formatDate);
  void            __fastcall replaceFA(long faDataType, BSTR cxml);
  void            __fastcall requestFA(long faDataType);
  void            __fastcall reqManagedAccts(void);
  void            __fastcall reqAllOpenOrders(void);
  void            __fastcall reqAutoOpenOrders(long bAutoBind);
  void            __fastcall setServerLogLevel(long logLevel);
  void            __fastcall reqNewsBulletins(long allDaysMsgs);
  void            __fastcall cancelNewsBulletins(void);
  void            __fastcall clearComboLegs(void);
  void            __fastcall addComboLeg(long conId, BSTR action, long ratio, BSTR exchange, 
                                         long openClose, long shortSaleSlot, BSTR designatedLocation);
  void            __fastcall cancelMktDepth(long id);
  void            __fastcall reqMktDepth2(long id, BSTR localSymbol, BSTR secType, BSTR exchange, 
                                          BSTR curency, long numRows);
  void            __fastcall reqMktData(long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                        double strike, BSTR right, BSTR multiplier, BSTR exchange, 
                                        BSTR primaryExchange, BSTR currency, BSTR genericTicks, 
                                        long snapshot);
  void            __fastcall reqIds(long numIds);
  void            __fastcall reqMktDepth(long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                         double strike, BSTR right, BSTR multiplier, BSTR exchange, 
                                         BSTR curency, long numRows);
  void            __fastcall reqContractDetails2(BSTR localSymbol, BSTR secType, BSTR exchange, 
                                                 BSTR curency, long includeExpired);
  void            __fastcall exerciseOptions(long id, BSTR symbol, BSTR secType, BSTR expiry, 
                                             double strike, BSTR right, BSTR multiplier, 
                                             BSTR exchange, BSTR curency, long exerciseAction, 
                                             long exerciseQuantity, long override);
  void            __fastcall placeOrder2(long id, BSTR action, long quantity, BSTR localSymbol, 
                                         BSTR secType, BSTR exchange, BSTR primaryExchange, 
                                         BSTR curency, BSTR orderType, double lmtPrice, 
                                         double auxPrice, BSTR goodAfterTime, BSTR group, 
                                         BSTR faMethod, BSTR faPercentage, BSTR faProfile, 
                                         BSTR goodTillDate);
  void            __fastcall reqMktData2(long id, BSTR localSymbol, BSTR secType, BSTR exchange, 
                                         BSTR primaryExchange, BSTR currency, BSTR genericTicks, 
                                         long snapshot);
  void            __fastcall reqContractDetails(BSTR symbol, BSTR secType, BSTR expiry, 
                                                double strike, BSTR right, BSTR multiplier, 
                                                BSTR exchange, BSTR curency, long includeExpired);
  void            __fastcall placeOrder(long id, BSTR action, long quantity, BSTR symbol, 
                                        BSTR secType, BSTR expiry, double strike, BSTR right, 
                                        BSTR multiplier, BSTR exchange, BSTR primaryExchange, 
                                        BSTR curency, BSTR orderType, double price, double auxPrice, 
                                        BSTR goodAfterTime, BSTR group, BSTR faMethod, 
                                        BSTR faPercentage, BSTR faProfile, BSTR goodTillDate);
  void            __fastcall reqAccountUpdates(long subscribe, BSTR acctCode);
  void            __fastcall reqOpenOrders(void);
  void            __fastcall reqExecutions(void);
  void            __fastcall connect(BSTR host, long port, long clientId);
  void            __fastcall disconnect(void);

  // OCX properties
  //
  __property _DTwsDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property double scalePriceIncrement={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=54 };
  __property int scaleSubsLevelSize={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=53 };
  __property int scaleInitLevelSize={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=52 };
  __property double trailStopPrice={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=51 };
  __property int referencePriceType={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=50 };
  __property int continuousUpdate={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=49 };
  __property double deltaNeutralAuxPrice={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=48 };
  __property System::WideString deltaNeutralOrderType={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=47 };
  __property int volatilityType={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=46 };
  __property double volatility={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=45 };
  __property int overridePercentageConstraints={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=44 };
  __property int serverVersion={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=43 };
  __property System::WideString TwsConnectionTime={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=42 };
  __property double stockRangeUpper={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=41 };
  __property double stockRangeLower={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=40 };
  __property double delta={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=39 };
  __property double stockRefPrice={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=38 };
  __property double startingPrice={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=37 };
  __property int auctionStrategy={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=36 };
  __property double nbboPriceCap={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=35 };
  __property int firmQuoteOnly={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=34 };
  __property int eTradeOnly={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=33 };
  __property double percentOffset={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=32 };
  __property int minQty={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=31 };
  __property int allOrNone={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=30 };
  __property System::WideString settlingFirm={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=29 };
  __property System::WideString rule80A={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=28 };
  __property int ocaType={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=26 };
  __property System::WideString designatedLocation={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=25 };
  __property int shortSaleSlot={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=24 };
  __property double discretionaryAmt={ read=GetDoubleProp, write=SetDoubleProp, stored=false, index=23 };
  __property System::WideString sideFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=22 };
  __property System::WideString exchangeFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=21 };
  __property System::WideString secTypeFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=20 };
  __property System::WideString symbolFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=19 };
  __property System::WideString timeFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=18 };
  __property System::WideString acctCodeFilter={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=17 };
  __property int clientIdFilter={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=16 };
  __property int hidden={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=14 };
  __property int outsideRth={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=13 };
  __property int triggerMethod={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=12 };
  __property int displaySize={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=11 };
  __property int sweepToFill={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=10 };
  __property int blockOrder={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=9 };
  __property int parentId={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=8 };
  __property System::WideString openClose={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=7 };
  __property int transmit={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=6 };
  __property int origin={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=5 };
  __property System::WideString orderRef={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=4 };
  __property System::WideString oca={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=3 };
  __property System::WideString tif={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=2 };
  __property System::WideString account={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=1 };

  // OCX Events
  //
  __property TTwstickPrice OntickPrice={ read=FOntickPrice, write=FOntickPrice };
  __property TTwstickSize OntickSize={ read=FOntickSize, write=FOntickSize };
  __property TNotifyEvent OnconnectionClosed={ read=FOnconnectionClosed, write=FOnconnectionClosed };
  __property TTwsopenOrder1 OnopenOrder1={ read=FOnopenOrder1, write=FOnopenOrder1 };
  __property TTwsopenOrder2 OnopenOrder2={ read=FOnopenOrder2, write=FOnopenOrder2 };
  __property TTwsupdateAccountTime OnupdateAccountTime={ read=FOnupdateAccountTime, write=FOnupdateAccountTime };
  __property TTwsupdateAccountValue OnupdateAccountValue={ read=FOnupdateAccountValue, write=FOnupdateAccountValue };
  __property TTwsnextValidId OnnextValidId={ read=FOnnextValidId, write=FOnnextValidId };
  __property TTwspermId OnpermId={ read=FOnpermId, write=FOnpermId };
  __property TTwserrMsg OnerrMsg={ read=FOnerrMsg, write=FOnerrMsg };
  __property TTwsupdatePortfolio OnupdatePortfolio={ read=FOnupdatePortfolio, write=FOnupdatePortfolio };
  __property TTwsorderStatus OnorderStatus={ read=FOnorderStatus, write=FOnorderStatus };
  __property TTwscontractDetails OncontractDetails={ read=FOncontractDetails, write=FOncontractDetails };
  __property TTwsexecDetails OnexecDetails={ read=FOnexecDetails, write=FOnexecDetails };
  __property TTwsupdateMktDepth OnupdateMktDepth={ read=FOnupdateMktDepth, write=FOnupdateMktDepth };
  __property TTwsupdateMktDepthL2 OnupdateMktDepthL2={ read=FOnupdateMktDepthL2, write=FOnupdateMktDepthL2 };
  __property TTwsupdateNewsBulletin OnupdateNewsBulletin={ read=FOnupdateNewsBulletin, write=FOnupdateNewsBulletin };
  __property TTwsmanagedAccounts OnmanagedAccounts={ read=FOnmanagedAccounts, write=FOnmanagedAccounts };
  __property TTwsopenOrder3 OnopenOrder3={ read=FOnopenOrder3, write=FOnopenOrder3 };
  __property TTwsreceiveFA OnreceiveFA={ read=FOnreceiveFA, write=FOnreceiveFA };
  __property TTwshistoricalData OnhistoricalData={ read=FOnhistoricalData, write=FOnhistoricalData };
  __property TTwsopenOrder4 OnopenOrder4={ read=FOnopenOrder4, write=FOnopenOrder4 };
  __property TTwsbondContractDetails OnbondContractDetails={ read=FOnbondContractDetails, write=FOnbondContractDetails };
  __property TTwsscannerParameters OnscannerParameters={ read=FOnscannerParameters, write=FOnscannerParameters };
  __property TTwsscannerData OnscannerData={ read=FOnscannerData, write=FOnscannerData };
  __property TTwstickOptionComputation OntickOptionComputation={ read=FOntickOptionComputation, write=FOntickOptionComputation };
  __property TTwstickGeneric OntickGeneric={ read=FOntickGeneric, write=FOntickGeneric };
  __property TTwstickString OntickString={ read=FOntickString, write=FOntickString };
  __property TTwstickEFP OntickEFP={ read=FOntickEFP, write=FOntickEFP };
  __property TTwsrealtimeBar OnrealtimeBar={ read=FOnrealtimeBar, write=FOnrealtimeBar };
  __property TTwscurrentTime OncurrentTime={ read=FOncurrentTime, write=FOncurrentTime };
  __property TTwsscannerDataEnd OnscannerDataEnd={ read=FOnscannerDataEnd, write=FOnscannerDataEnd };
  __property TTwsfundamentalData OnfundamentalData={ read=FOnfundamentalData, write=FOnfundamentalData };
  __property TTwscontractDetailsEnd OncontractDetailsEnd={ read=FOncontractDetailsEnd, write=FOncontractDetailsEnd };
  __property TNotifyEvent OnopenOrderEnd={ read=FOnopenOrderEnd, write=FOnopenOrderEnd };
  __property TTwsaccountDownloadEnd OnaccountDownloadEnd={ read=FOnaccountDownloadEnd, write=FOnaccountDownloadEnd };
  __property TTwsexecDetailsEnd OnexecDetailsEnd={ read=FOnexecDetailsEnd, write=FOnexecDetailsEnd };
  __property TTwsdeltaNeutralValidation OndeltaNeutralValidation={ read=FOndeltaNeutralValidation, write=FOndeltaNeutralValidation };
  __property TTwstickSnapshotEnd OntickSnapshotEnd={ read=FOntickSnapshotEnd, write=FOntickSnapshotEnd };
  __property TTwscontractDetailsEx OncontractDetailsEx={ read=FOncontractDetailsEx, write=FOncontractDetailsEx };
  __property TTwsopenOrderEx OnopenOrderEx={ read=FOnopenOrderEx, write=FOnopenOrderEx };
  __property TTwsexecDetailsEx OnexecDetailsEx={ read=FOnexecDetailsEx, write=FOnexecDetailsEx };
  __property TTwsupdatePortfolioEx OnupdatePortfolioEx={ read=FOnupdatePortfolioEx, write=FOnupdatePortfolioEx };
  __property TTwsscannerDataEx OnscannerDataEx={ read=FOnscannerDataEx, write=FOnscannerDataEx };
};
typedef TTws  TTwsProxy;

};     // namespace Twslib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Twslib_tlb;
#endif

#pragma option pop

#endif // TWSLib_OCXH
